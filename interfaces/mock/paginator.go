// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"github.com/cadmiumcat/books-api/interfaces"
	"net/http"
	"sync"
)

// Ensure, that PaginatorMock does implement interfaces.Paginator.
// If this is not the case, regenerate this file with moq.
var _ interfaces.Paginator = &PaginatorMock{}

// PaginatorMock is a mock implementation of interfaces.Paginator.
//
//     func TestSomethingThatUsesPaginator(t *testing.T) {
//
//         // make and configure a mocked interfaces.Paginator
//         mockedPaginator := &PaginatorMock{
//             GetPaginationValuesFunc: func(r *http.Request) (int, int, error) {
// 	               panic("mock out the GetPaginationValues method")
//             },
//         }
//
//         // use mockedPaginator in code that requires interfaces.Paginator
//         // and then make assertions.
//
//     }
type PaginatorMock struct {
	// GetPaginationValuesFunc mocks the GetPaginationValues method.
	GetPaginationValuesFunc func(r *http.Request) (int, int, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetPaginationValues holds details about calls to the GetPaginationValues method.
		GetPaginationValues []struct {
			// R is the r argument value.
			R *http.Request
		}
	}
	lockGetPaginationValues sync.RWMutex
}

// GetPaginationValues calls GetPaginationValuesFunc.
func (mock *PaginatorMock) GetPaginationValues(r *http.Request) (int, int, error) {
	if mock.GetPaginationValuesFunc == nil {
		panic("PaginatorMock.GetPaginationValuesFunc: method is nil but Paginator.GetPaginationValues was just called")
	}
	callInfo := struct {
		R *http.Request
	}{
		R: r,
	}
	mock.lockGetPaginationValues.Lock()
	mock.calls.GetPaginationValues = append(mock.calls.GetPaginationValues, callInfo)
	mock.lockGetPaginationValues.Unlock()
	return mock.GetPaginationValuesFunc(r)
}

// GetPaginationValuesCalls gets all the calls that were made to GetPaginationValues.
// Check the length with:
//     len(mockedPaginator.GetPaginationValuesCalls())
func (mock *PaginatorMock) GetPaginationValuesCalls() []struct {
	R *http.Request
} {
	var calls []struct {
		R *http.Request
	}
	mock.lockGetPaginationValues.RLock()
	calls = mock.calls.GetPaginationValues
	mock.lockGetPaginationValues.RUnlock()
	return calls
}
